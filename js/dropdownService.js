export function initDropdown(displayRandomPokemons) {    document.addEventListener("DOMContentLoaded", () => {        const dropdown = document.querySelector('#options');        const form = document.querySelector('form');  // Ajout de la sélection du formulaire        // Ici on gère la liste déroulante        const exPokemonTypes = async () => {            try {                console.log("Fetching selected Pokémon types...");                const response = await fetch('https://tyradex.vercel.app/api/v1/types');                if (!response.ok) {                    throw new Error('Network response was not ok');                }                const data = await response.json();                console.log("Types fetched successfully:", data);                const selectedTypes = ['eau', 'plante', 'feu', 'spectre'];                return data                    .map(type => type.name.fr)                    .filter(typeName => selectedTypes.includes(typeName.toLowerCase()));            } catch (error) {                console.error('Erreur lors de la récupération des types:', error);                return [];            }        };        const typesDropDown = async () => {            if (!dropdown) {                console.error("Dropdown element not found in the DOM.");                return;            }            dropdown.innerHTML = '';            try {                const types = await exPokemonTypes();                types.forEach((type) => {                    const option = document.createElement("option");                    option.value = type.toLowerCase();                    option.textContent = type;                    dropdown.appendChild(option);                });            } catch (error) {                console.error("Erreur lors du remplissage de la liste déroulante :", error);                const option = document.createElement("option");                option.value = "";                option.textContent = "Erreur de chargement";                dropdown.appendChild(option);            }        };        typesDropDown();        // Fonction pour valider le choix de l'utilisateur        form.addEventListener("submit", async (event) => { // Ne comprends l'utilisation de cet eventlisteners            event.preventDefault();  // Empêche la soumission du formulaire            const selectedType = document.getElementById("options").value;            if (selectedType) {                // console.log(`User selected: ${selectedType}`);                await displayRandomPokemons(selectedType);  // Afficher un Pokémon au hasard du type sélectionné            } else {                console.log("No Pokémon type selected.");            }        });    });}